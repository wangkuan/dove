infra:
  monitors:
    grafana:
      metrics:
        enabled: true
      datasources:
        secretDefinition:
          apiVersion: 1
          datasources:
            - name: Prometheus
              type: prometheus
              access: proxy
              orgId: 1
              url: http://{{ .Release.Name }}-prometheus-server
              version: 1
              editable: true
              isDefault: true
            - name: Alertmanager
              uid: alertmanager
              type: alertmanager
              access: proxy
              orgId: 1
              url: http://{{ .Release.Name }}-prometheus-alertmanager
              version: 1
              editable: true
            - name: Loki
              uid: loki
              type: loki
              access: proxy
              orgId: 1
              url: http://{{ .Release.Name }}-grafana-loki-query-frontend:3100
              version: 1
              editable: true
    grafana-loki:
      metrics:
        enabled: true
    prometheus:
      server:
        configuration: |
          global:
            {{- if .Values.server.scrapeInterval }}
            scrape_interval: {{ .Values.server.scrapeInterval }}
            {{- end }}
            {{- if .Values.server.scrapeTimeout }}
            scrape_timeout: {{ .Values.server.scrapeTimeout }}
            {{- end }}
            {{- if .Values.server.evaluationInterval }}
            evaluation_interval: {{ .Values.server.evaluationInterval }}
            {{- end }}
            external_labels:
              monitor: {{ template "common.names.fullname" . }}
              {{- if .Values.server.externalLabels }}
              {{- include "common.tplvalues.render" (dict "value" .Values.server.externalLabels "context" $) | nindent 4 }}
              {{- end }}
          {{- if .Values.server.remoteWrite }}
          remote_write: {{- include "common.tplvalues.render" (dict "value" .Values.server.remoteWrite "context" $) | nindent 4 }}
          {{- end }}
          scrape_configs:
            - job_name: prometheus
            {{- include "prometheus.scrape_config" (dict "component" "server" "context" $) | nindent 4 }}
          {{- if .Values.alertmanager.enabled }}
            - job_name: alertmanager
              {{- include "prometheus.scrape_config" (dict "component" "alertmanager" "context" $) | nindent 4 }}
            - job_name: 'mysql'
              static_configs:
                - targets: ['{{ .Release.Name }}-mysql-metrics:9104']
            - job_name: 'redis'
              static_configs:
                - targets: ['{{ .Release.Name }}-redis-metrics:9121']
            - job_name: 'mysql-exporter'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_label_app_kubernetes_io_component]
                  action: keep
                  regex: mysql;primary
          {{- end }}
          {{- if .Values.server.extraScrapeConfigs}}
          {{- include "common.tplvalues.render" (dict "value" .Values.server.extraScrapeConfigs "context" $) | nindent 2 }}
          {{- end }}
          {{- if or .Values.alertmanager.enabled .Values.server.alertingEndpoints}}
          alerting:
            alertmanagers:
              {{- if .Values.server.alertingEndpoints }}
              {{- include "common.tplvalues.render" (dict "value" .Values.server.alertingEndpoints "context" $) | nindent 4 }}
              {{- end }}
              - scheme: HTTP
                static_configs:
                  - targets: [ "{{ printf "%s.%s.svc.%s:%d" (include "prometheus.alertmanager.fullname" .) (include "common.names.namespace" .) .Values.clusterDomain (int .Values.alertmanager.service.ports.http) }}" ]
          rule_files:
            - rules.yaml
          {{- end }}
  
  middlewares:
    minio:
      metrics:
        enabled: true
    mongodb:
      metrics:
        enabled: true
    mysql:
      metrics:
        enabled: true
    redis:
      metrics:
        enabled: true